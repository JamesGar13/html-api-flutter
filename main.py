from fastapi import FastAPI
from pydantic import BaseModel
from fastapi.middleware.cors import CORSMiddleware
import subprocess
from fastapi.responses import HTMLResponse



app = FastAPI()

# –î–æ–∑–≤–æ–ª—è—î–º–æ CORS –¥–ª—è Flutter-–¥–æ–¥–∞—Ç–∫—É
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –ó–∞–º—ñ–Ω–∏ "*" –Ω–∞ –∞–¥—Ä–µ—Å—É —Ç–≤–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É
    allow_methods=["*"],
    allow_headers=["*"],
)

# üü¢ –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ (–¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏)
@app.get("/")
def read_root():
    return {"message": "API –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è HTML-–∫–æ–¥—É –∑–∞–ø—É—â–µ–Ω–æ."}

# üîµ –ú–æ–¥–µ–ª—å –¥–ª—è –∑–∞–ø–∏—Ç—É
class CodeInput(BaseModel):
    code: str

# üî¥ –ï–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É HTML-–∫–æ–¥—É
@app.post("/run-html")
def run_html_code(input: CodeInput):
    try:
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ–¥ —É —Ñ–∞–π–ª
        with open("temp.html", "w", encoding="utf-8") as f:
            f.write(input.code)

        # –ó–∞–ø—É—Å–∫–∞—î–º–æ —É –±—Ä–∞—É–∑–µ—Ä—ñ –∞–±–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ HTML-—Ä—è–¥–æ–∫
        return HTMLResponse(content=input.code)
    except Exception as e:
        return {"error": str(e)}
